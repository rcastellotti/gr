mbw: 2023-07-26 20:59:59.291509Long uses 8 bytes. Allocating 2*134217728 elements = 2147483648 bytes of memory.
Using 262144 bytes as blocks for memcpy block copy test.
Getting down to business... Doing 10 runs per test.
0	Method: MEMCPY	Elapsed: 0.06227	MiB: 1024.00000	Copy: 16445.572 MiB/s
1	Method: MEMCPY	Elapsed: 0.05951	MiB: 1024.00000	Copy: 17208.638 MiB/s
2	Method: MEMCPY	Elapsed: 0.05931	MiB: 1024.00000	Copy: 17266.381 MiB/s
3	Method: MEMCPY	Elapsed: 0.05960	MiB: 1024.00000	Copy: 17181.785 MiB/s
4	Method: MEMCPY	Elapsed: 0.05893	MiB: 1024.00000	Copy: 17375.959 MiB/s
5	Method: MEMCPY	Elapsed: 0.06005	MiB: 1024.00000	Copy: 17052.740 MiB/s
6	Method: MEMCPY	Elapsed: 0.05870	MiB: 1024.00000	Copy: 17444.931 MiB/s
7	Method: MEMCPY	Elapsed: 0.05837	MiB: 1024.00000	Copy: 17543.860 MiB/s
8	Method: MEMCPY	Elapsed: 0.05875	MiB: 1024.00000	Copy: 17430.677 MiB/s
9	Method: MEMCPY	Elapsed: 0.05850	MiB: 1024.00000	Copy: 17503.675 MiB/s
AVG	Method: MEMCPY	Elapsed: 0.05940	MiB: 1024.00000	Copy: 17239.870 MiB/s
0	Method: DUMB	Elapsed: 0.10558	MiB: 1024.00000	Copy: 9699.174 MiB/s
1	Method: DUMB	Elapsed: 0.10758	MiB: 1024.00000	Copy: 9518.763 MiB/s
2	Method: DUMB	Elapsed: 0.10489	MiB: 1024.00000	Copy: 9762.329 MiB/s
3	Method: DUMB	Elapsed: 0.10674	MiB: 1024.00000	Copy: 9593.674 MiB/s
4	Method: DUMB	Elapsed: 0.10634	MiB: 1024.00000	Copy: 9629.762 MiB/s
5	Method: DUMB	Elapsed: 0.11051	MiB: 1024.00000	Copy: 9266.046 MiB/s
6	Method: DUMB	Elapsed: 0.10639	MiB: 1024.00000	Copy: 9625.055 MiB/s
7	Method: DUMB	Elapsed: 0.10536	MiB: 1024.00000	Copy: 9718.689 MiB/s
8	Method: DUMB	Elapsed: 0.10404	MiB: 1024.00000	Copy: 9842.179 MiB/s
9	Method: DUMB	Elapsed: 0.10381	MiB: 1024.00000	Copy: 9863.795 MiB/s
AVG	Method: DUMB	Elapsed: 0.10612	MiB: 1024.00000	Copy: 9649.090 MiB/s
0	Method: MCBLOCK	Elapsed: 0.10545	MiB: 1024.00000	Copy: 9711.040 MiB/s
1	Method: MCBLOCK	Elapsed: 0.10547	MiB: 1024.00000	Copy: 9709.290 MiB/s
2	Method: MCBLOCK	Elapsed: 0.10522	MiB: 1024.00000	Copy: 9731.898 MiB/s
3	Method: MCBLOCK	Elapsed: 0.10526	MiB: 1024.00000	Copy: 9728.754 MiB/s
4	Method: MCBLOCK	Elapsed: 0.10529	MiB: 1024.00000	Copy: 9725.520 MiB/s
5	Method: MCBLOCK	Elapsed: 0.10510	MiB: 1024.00000	Copy: 9743.102 MiB/s
6	Method: MCBLOCK	Elapsed: 0.10520	MiB: 1024.00000	Copy: 9733.655 MiB/s
7	Method: MCBLOCK	Elapsed: 0.10536	MiB: 1024.00000	Copy: 9719.427 MiB/s
8	Method: MCBLOCK	Elapsed: 0.10533	MiB: 1024.00000	Copy: 9721.827 MiB/s
9	Method: MCBLOCK	Elapsed: 0.10523	MiB: 1024.00000	Copy: 9731.065 MiB/s
AVG	Method: MCBLOCK	Elapsed: 0.10529	MiB: 1024.00000	Copy: 9725.548 MiB/s
mbw: 2023-07-26 21:50:31.414572Long uses 8 bytes. Allocating 2*134217728 elements = 2147483648 bytes of memory.
Using 262144 bytes as blocks for memcpy block copy test.
Getting down to business... Doing 10 runs per test.
0	Method: MEMCPY	Elapsed: 0.06099	MiB: 1024.00000	Copy: 16789.913 MiB/s
1	Method: MEMCPY	Elapsed: 0.05923	MiB: 1024.00000	Copy: 17289.412 MiB/s
2	Method: MEMCPY	Elapsed: 0.05899	MiB: 1024.00000	Copy: 17358.874 MiB/s
3	Method: MEMCPY	Elapsed: 0.05884	MiB: 1024.00000	Copy: 17403.719 MiB/s
4	Method: MEMCPY	Elapsed: 0.05874	MiB: 1024.00000	Copy: 17434.239 MiB/s
5	Method: MEMCPY	Elapsed: 0.05861	MiB: 1024.00000	Copy: 17470.527 MiB/s
6	Method: MEMCPY	Elapsed: 0.05849	MiB: 1024.00000	Copy: 17506.069 MiB/s
7	Method: MEMCPY	Elapsed: 0.05835	MiB: 1024.00000	Copy: 17549.272 MiB/s
8	Method: MEMCPY	Elapsed: 0.05828	MiB: 1024.00000	Copy: 17568.843 MiB/s
9	Method: MEMCPY	Elapsed: 0.05816	MiB: 1024.00000	Copy: 17605.997 MiB/s
AVG	Method: MEMCPY	Elapsed: 0.05887	MiB: 1024.00000	Copy: 17394.761 MiB/s
0	Method: DUMB	Elapsed: 0.10438	MiB: 1024.00000	Copy: 9810.402 MiB/s
1	Method: DUMB	Elapsed: 0.10510	MiB: 1024.00000	Copy: 9743.473 MiB/s
2	Method: DUMB	Elapsed: 0.10508	MiB: 1024.00000	Copy: 9744.771 MiB/s
3	Method: DUMB	Elapsed: 0.10505	MiB: 1024.00000	Copy: 9747.554 MiB/s
4	Method: DUMB	Elapsed: 0.10504	MiB: 1024.00000	Copy: 9748.946 MiB/s
5	Method: DUMB	Elapsed: 0.10518	MiB: 1024.00000	Copy: 9736.061 MiB/s
6	Method: DUMB	Elapsed: 0.10486	MiB: 1024.00000	Copy: 9765.495 MiB/s
7	Method: DUMB	Elapsed: 0.10486	MiB: 1024.00000	Copy: 9765.122 MiB/s
8	Method: DUMB	Elapsed: 0.10482	MiB: 1024.00000	Copy: 9769.314 MiB/s
9	Method: DUMB	Elapsed: 0.10488	MiB: 1024.00000	Copy: 9763.167 MiB/s
AVG	Method: DUMB	Elapsed: 0.10492	MiB: 1024.00000	Copy: 9759.389 MiB/s
0	Method: MCBLOCK	Elapsed: 0.10566	MiB: 1024.00000	Copy: 9691.188 MiB/s
1	Method: MCBLOCK	Elapsed: 0.10678	MiB: 1024.00000	Copy: 9589.990 MiB/s
2	Method: MCBLOCK	Elapsed: 0.10700	MiB: 1024.00000	Copy: 9569.915 MiB/s
3	Method: MCBLOCK	Elapsed: 0.10677	MiB: 1024.00000	Copy: 9590.619 MiB/s
4	Method: MCBLOCK	Elapsed: 0.10659	MiB: 1024.00000	Copy: 9607.265 MiB/s
5	Method: MCBLOCK	Elapsed: 0.10577	MiB: 1024.00000	Copy: 9681.750 MiB/s
6	Method: MCBLOCK	Elapsed: 0.10563	MiB: 1024.00000	Copy: 9694.399 MiB/s
7	Method: MCBLOCK	Elapsed: 0.10555	MiB: 1024.00000	Copy: 9701.288 MiB/s
8	Method: MCBLOCK	Elapsed: 0.10555	MiB: 1024.00000	Copy: 9701.931 MiB/s
9	Method: MCBLOCK	Elapsed: 0.10562	MiB: 1024.00000	Copy: 9694.766 MiB/s
AVG	Method: MCBLOCK	Elapsed: 0.10609	MiB: 1024.00000	Copy: 9652.027 MiB/s
mbw: 2023-07-26 22:38:09.098963Long uses 8 bytes. Allocating 2*134217728 elements = 2147483648 bytes of memory.
Using 262144 bytes as blocks for memcpy block copy test.
Getting down to business... Doing 10 runs per test.
0	Method: MEMCPY	Elapsed: 0.06086	MiB: 1024.00000	Copy: 16826.331 MiB/s
1	Method: MEMCPY	Elapsed: 0.05876	MiB: 1024.00000	Copy: 17425.338 MiB/s
2	Method: MEMCPY	Elapsed: 0.05857	MiB: 1024.00000	Copy: 17484.547 MiB/s
3	Method: MEMCPY	Elapsed: 0.05833	MiB: 1024.00000	Copy: 17555.891 MiB/s
4	Method: MEMCPY	Elapsed: 0.05815	MiB: 1024.00000	Copy: 17609.025 MiB/s
5	Method: MEMCPY	Elapsed: 0.05810	MiB: 1024.00000	Copy: 17626.302 MiB/s
6	Method: MEMCPY	Elapsed: 0.05800	MiB: 1024.00000	Copy: 17655.781 MiB/s
7	Method: MEMCPY	Elapsed: 0.05786	MiB: 1024.00000	Copy: 17698.197 MiB/s
8	Method: MEMCPY	Elapsed: 0.05778	MiB: 1024.00000	Copy: 17723.622 MiB/s
9	Method: MEMCPY	Elapsed: 0.05774	MiB: 1024.00000	Copy: 17734.980 MiB/s
AVG	Method: MEMCPY	Elapsed: 0.05841	MiB: 1024.00000	Copy: 17530.194 MiB/s
0	Method: DUMB	Elapsed: 0.10126	MiB: 1024.00000	Copy: 10112.981 MiB/s
1	Method: DUMB	Elapsed: 0.10242	MiB: 1024.00000	Copy: 9997.950 MiB/s
2	Method: DUMB	Elapsed: 0.10258	MiB: 1024.00000	Copy: 9982.647 MiB/s
3	Method: DUMB	Elapsed: 0.10278	MiB: 1024.00000	Copy: 9963.319 MiB/s
4	Method: DUMB	Elapsed: 0.10285	MiB: 1024.00000	Copy: 9956.247 MiB/s
5	Method: DUMB	Elapsed: 0.10293	MiB: 1024.00000	Copy: 9948.895 MiB/s
6	Method: DUMB	Elapsed: 0.10276	MiB: 1024.00000	Copy: 9964.482 MiB/s
7	Method: DUMB	Elapsed: 0.10269	MiB: 1024.00000	Copy: 9972.051 MiB/s
8	Method: DUMB	Elapsed: 0.10279	MiB: 1024.00000	Copy: 9961.574 MiB/s
9	Method: DUMB	Elapsed: 0.10277	MiB: 1024.00000	Copy: 9964.288 MiB/s
AVG	Method: DUMB	Elapsed: 0.10258	MiB: 1024.00000	Copy: 9982.239 MiB/s
0	Method: MCBLOCK	Elapsed: 0.10505	MiB: 1024.00000	Copy: 9747.739 MiB/s
1	Method: MCBLOCK	Elapsed: 0.10563	MiB: 1024.00000	Copy: 9694.583 MiB/s
2	Method: MCBLOCK	Elapsed: 0.10581	MiB: 1024.00000	Copy: 9678.090 MiB/s
3	Method: MCBLOCK	Elapsed: 0.10676	MiB: 1024.00000	Copy: 9591.158 MiB/s
4	Method: MCBLOCK	Elapsed: 0.10658	MiB: 1024.00000	Copy: 9608.257 MiB/s
5	Method: MCBLOCK	Elapsed: 0.10677	MiB: 1024.00000	Copy: 9590.529 MiB/s
6	Method: MCBLOCK	Elapsed: 0.10657	MiB: 1024.00000	Copy: 9608.978 MiB/s
7	Method: MCBLOCK	Elapsed: 0.10658	MiB: 1024.00000	Copy: 9607.446 MiB/s
8	Method: MCBLOCK	Elapsed: 0.10662	MiB: 1024.00000	Copy: 9603.932 MiB/s
9	Method: MCBLOCK	Elapsed: 0.10660	MiB: 1024.00000	Copy: 9606.004 MiB/s
AVG	Method: MCBLOCK	Elapsed: 0.10630	MiB: 1024.00000	Copy: 9633.404 MiB/s
mbw: 2023-07-26 23:25:51.812912Long uses 8 bytes. Allocating 2*134217728 elements = 2147483648 bytes of memory.
Using 262144 bytes as blocks for memcpy block copy test.
Getting down to business... Doing 10 runs per test.
0	Method: MEMCPY	Elapsed: 0.06203	MiB: 1024.00000	Copy: 16507.875 MiB/s
1	Method: MEMCPY	Elapsed: 0.06028	MiB: 1024.00000	Copy: 16986.547 MiB/s
2	Method: MEMCPY	Elapsed: 0.05981	MiB: 1024.00000	Copy: 17120.883 MiB/s
3	Method: MEMCPY	Elapsed: 0.05976	MiB: 1024.00000	Copy: 17136.355 MiB/s
4	Method: MEMCPY	Elapsed: 0.05964	MiB: 1024.00000	Copy: 17169.109 MiB/s
5	Method: MEMCPY	Elapsed: 0.05942	MiB: 1024.00000	Copy: 17231.805 MiB/s
6	Method: MEMCPY	Elapsed: 0.05940	MiB: 1024.00000	Copy: 17239.347 MiB/s
7	Method: MEMCPY	Elapsed: 0.05924	MiB: 1024.00000	Copy: 17284.451 MiB/s
8	Method: MEMCPY	Elapsed: 0.05921	MiB: 1024.00000	Copy: 17294.084 MiB/s
9	Method: MEMCPY	Elapsed: 0.05914	MiB: 1024.00000	Copy: 17314.261 MiB/s
AVG	Method: MEMCPY	Elapsed: 0.05979	MiB: 1024.00000	Copy: 17125.378 MiB/s
0	Method: DUMB	Elapsed: 0.10774	MiB: 1024.00000	Copy: 9503.921 MiB/s
1	Method: DUMB	Elapsed: 0.10915	MiB: 1024.00000	Copy: 9381.585 MiB/s
2	Method: DUMB	Elapsed: 0.10892	MiB: 1024.00000	Copy: 9401.137 MiB/s
3	Method: DUMB	Elapsed: 0.10884	MiB: 1024.00000	Copy: 9407.874 MiB/s
4	Method: DUMB	Elapsed: 0.10902	MiB: 1024.00000	Copy: 9392.944 MiB/s
5	Method: DUMB	Elapsed: 0.10901	MiB: 1024.00000	Copy: 9393.806 MiB/s
6	Method: DUMB	Elapsed: 0.10912	MiB: 1024.00000	Copy: 9384.594 MiB/s
7	Method: DUMB	Elapsed: 0.10921	MiB: 1024.00000	Copy: 9376.517 MiB/s
8	Method: DUMB	Elapsed: 0.10890	MiB: 1024.00000	Copy: 9402.949 MiB/s
9	Method: DUMB	Elapsed: 0.10887	MiB: 1024.00000	Copy: 9405.972 MiB/s
AVG	Method: DUMB	Elapsed: 0.10888	MiB: 1024.00000	Copy: 9405.005 MiB/s
0	Method: MCBLOCK	Elapsed: 0.10756	MiB: 1024.00000	Copy: 9520.533 MiB/s
1	Method: MCBLOCK	Elapsed: 0.10759	MiB: 1024.00000	Copy: 9517.436 MiB/s
2	Method: MCBLOCK	Elapsed: 0.10758	MiB: 1024.00000	Copy: 9518.321 MiB/s
3	Method: MCBLOCK	Elapsed: 0.10760	MiB: 1024.00000	Copy: 9516.463 MiB/s
4	Method: MCBLOCK	Elapsed: 0.10748	MiB: 1024.00000	Copy: 9527.620 MiB/s
5	Method: MCBLOCK	Elapsed: 0.10754	MiB: 1024.00000	Copy: 9522.393 MiB/s
6	Method: MCBLOCK	Elapsed: 0.10752	MiB: 1024.00000	Copy: 9523.721 MiB/s
7	Method: MCBLOCK	Elapsed: 0.10761	MiB: 1024.00000	Copy: 9515.756 MiB/s
8	Method: MCBLOCK	Elapsed: 0.10748	MiB: 1024.00000	Copy: 9527.088 MiB/s
9	Method: MCBLOCK	Elapsed: 0.10753	MiB: 1024.00000	Copy: 9522.570 MiB/s
AVG	Method: MCBLOCK	Elapsed: 0.10755	MiB: 1024.00000	Copy: 9521.188 MiB/s
mbw: 2023-07-27 00:13:26.228091Long uses 8 bytes. Allocating 2*134217728 elements = 2147483648 bytes of memory.
Using 262144 bytes as blocks for memcpy block copy test.
Getting down to business... Doing 10 runs per test.
0	Method: MEMCPY	Elapsed: 0.06259	MiB: 1024.00000	Copy: 16361.748 MiB/s
1	Method: MEMCPY	Elapsed: 0.06195	MiB: 1024.00000	Copy: 16529.459 MiB/s
2	Method: MEMCPY	Elapsed: 0.06007	MiB: 1024.00000	Copy: 17047.630 MiB/s
3	Method: MEMCPY	Elapsed: 0.06021	MiB: 1024.00000	Copy: 17007.142 MiB/s
4	Method: MEMCPY	Elapsed: 0.06007	MiB: 1024.00000	Copy: 17046.495 MiB/s
5	Method: MEMCPY	Elapsed: 0.05962	MiB: 1024.00000	Copy: 17176.309 MiB/s
6	Method: MEMCPY	Elapsed: 0.05981	MiB: 1024.00000	Copy: 17122.028 MiB/s
7	Method: MEMCPY	Elapsed: 0.05951	MiB: 1024.00000	Copy: 17207.192 MiB/s
8	Method: MEMCPY	Elapsed: 0.05957	MiB: 1024.00000	Copy: 17189.572 MiB/s
9	Method: MEMCPY	Elapsed: 0.05920	MiB: 1024.00000	Copy: 17296.129 MiB/s
AVG	Method: MEMCPY	Elapsed: 0.06026	MiB: 1024.00000	Copy: 16993.284 MiB/s
0	Method: DUMB	Elapsed: 0.10873	MiB: 1024.00000	Copy: 9417.391 MiB/s
1	Method: DUMB	Elapsed: 0.11119	MiB: 1024.00000	Copy: 9209.793 MiB/s
2	Method: DUMB	Elapsed: 0.10971	MiB: 1024.00000	Copy: 9333.443 MiB/s
3	Method: DUMB	Elapsed: 0.10818	MiB: 1024.00000	Copy: 9465.443 MiB/s
4	Method: DUMB	Elapsed: 0.10846	MiB: 1024.00000	Copy: 9441.617 MiB/s
5	Method: DUMB	Elapsed: 0.10780	MiB: 1024.00000	Copy: 9498.720 MiB/s
6	Method: DUMB	Elapsed: 0.10792	MiB: 1024.00000	Copy: 9488.334 MiB/s
7	Method: DUMB	Elapsed: 0.10897	MiB: 1024.00000	Copy: 9396.996 MiB/s
8	Method: DUMB	Elapsed: 0.10935	MiB: 1024.00000	Copy: 9364.683 MiB/s
9	Method: DUMB	Elapsed: 0.10924	MiB: 1024.00000	Copy: 9374.199 MiB/s
AVG	Method: DUMB	Elapsed: 0.10896	MiB: 1024.00000	Copy: 9398.350 MiB/s
0	Method: MCBLOCK	Elapsed: 0.10820	MiB: 1024.00000	Copy: 9464.131 MiB/s
1	Method: MCBLOCK	Elapsed: 0.10890	MiB: 1024.00000	Copy: 9403.295 MiB/s
2	Method: MCBLOCK	Elapsed: 0.10895	MiB: 1024.00000	Copy: 9398.893 MiB/s
3	Method: MCBLOCK	Elapsed: 0.10889	MiB: 1024.00000	Copy: 9403.640 MiB/s
4	Method: MCBLOCK	Elapsed: 0.10854	MiB: 1024.00000	Copy: 9434.223 MiB/s
5	Method: MCBLOCK	Elapsed: 0.10895	MiB: 1024.00000	Copy: 9399.066 MiB/s
6	Method: MCBLOCK	Elapsed: 0.10842	MiB: 1024.00000	Copy: 9444.839 MiB/s
7	Method: MCBLOCK	Elapsed: 0.10913	MiB: 1024.00000	Copy: 9382.960 MiB/s
8	Method: MCBLOCK	Elapsed: 0.10817	MiB: 1024.00000	Copy: 9466.755 MiB/s
9	Method: MCBLOCK	Elapsed: 0.10872	MiB: 1024.00000	Copy: 9418.517 MiB/s
AVG	Method: MCBLOCK	Elapsed: 0.10869	MiB: 1024.00000	Copy: 9421.550 MiB/s
